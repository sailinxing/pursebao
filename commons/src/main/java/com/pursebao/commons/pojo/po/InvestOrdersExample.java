package com.pursebao.commons.pojo.po;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class InvestOrdersExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public InvestOrdersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable{
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andOidIsNull() {
            addCriterion("oid is null");
            return (Criteria) this;
        }

        public Criteria andOidIsNotNull() {
            addCriterion("oid is not null");
            return (Criteria) this;
        }

        public Criteria andOidEqualTo(String value) {
            addCriterion("oid =", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotEqualTo(String value) {
            addCriterion("oid <>", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidGreaterThan(String value) {
            addCriterion("oid >", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidGreaterThanOrEqualTo(String value) {
            addCriterion("oid >=", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidLessThan(String value) {
            addCriterion("oid <", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidLessThanOrEqualTo(String value) {
            addCriterion("oid <=", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidLike(String value) {
            addCriterion("oid like", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotLike(String value) {
            addCriterion("oid not like", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidIn(List<String> values) {
            addCriterion("oid in", values, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotIn(List<String> values) {
            addCriterion("oid not in", values, "oid");
            return (Criteria) this;
        }

        public Criteria andOidBetween(String value1, String value2) {
            addCriterion("oid between", value1, value2, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotBetween(String value1, String value2) {
            addCriterion("oid not between", value1, value2, "oid");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyIsNull() {
            addCriterion("invest_money is null");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyIsNotNull() {
            addCriterion("invest_money is not null");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyEqualTo(Double value) {
            addCriterion("invest_money =", value, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyNotEqualTo(Double value) {
            addCriterion("invest_money <>", value, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyGreaterThan(Double value) {
            addCriterion("invest_money >", value, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("invest_money >=", value, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyLessThan(Double value) {
            addCriterion("invest_money <", value, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyLessThanOrEqualTo(Double value) {
            addCriterion("invest_money <=", value, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyIn(List<Double> values) {
            addCriterion("invest_money in", values, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyNotIn(List<Double> values) {
            addCriterion("invest_money not in", values, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyBetween(Double value1, Double value2) {
            addCriterion("invest_money between", value1, value2, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestMoneyNotBetween(Double value1, Double value2) {
            addCriterion("invest_money not between", value1, value2, "investMoney");
            return (Criteria) this;
        }

        public Criteria andInvestDateIsNull() {
            addCriterion("invest_date is null");
            return (Criteria) this;
        }

        public Criteria andInvestDateIsNotNull() {
            addCriterion("invest_date is not null");
            return (Criteria) this;
        }

        public Criteria andInvestDateEqualTo(Date value) {
            addCriterionForJDBCDate("invest_date =", value, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("invest_date <>", value, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateGreaterThan(Date value) {
            addCriterionForJDBCDate("invest_date >", value, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("invest_date >=", value, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateLessThan(Date value) {
            addCriterionForJDBCDate("invest_date <", value, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("invest_date <=", value, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateIn(List<Date> values) {
            addCriterionForJDBCDate("invest_date in", values, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("invest_date not in", values, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("invest_date between", value1, value2, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("invest_date not between", value1, value2, "investDate");
            return (Criteria) this;
        }

        public Criteria andInvestPidIsNull() {
            addCriterion("invest_pid is null");
            return (Criteria) this;
        }

        public Criteria andInvestPidIsNotNull() {
            addCriterion("invest_pid is not null");
            return (Criteria) this;
        }

        public Criteria andInvestPidEqualTo(String value) {
            addCriterion("invest_pid =", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidNotEqualTo(String value) {
            addCriterion("invest_pid <>", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidGreaterThan(String value) {
            addCriterion("invest_pid >", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidGreaterThanOrEqualTo(String value) {
            addCriterion("invest_pid >=", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidLessThan(String value) {
            addCriterion("invest_pid <", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidLessThanOrEqualTo(String value) {
            addCriterion("invest_pid <=", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidLike(String value) {
            addCriterion("invest_pid like", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidNotLike(String value) {
            addCriterion("invest_pid not like", value, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidIn(List<String> values) {
            addCriterion("invest_pid in", values, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidNotIn(List<String> values) {
            addCriterion("invest_pid not in", values, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidBetween(String value1, String value2) {
            addCriterion("invest_pid between", value1, value2, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestPidNotBetween(String value1, String value2) {
            addCriterion("invest_pid not between", value1, value2, "investPid");
            return (Criteria) this;
        }

        public Criteria andInvestorIdIsNull() {
            addCriterion("investor_id is null");
            return (Criteria) this;
        }

        public Criteria andInvestorIdIsNotNull() {
            addCriterion("investor_id is not null");
            return (Criteria) this;
        }

        public Criteria andInvestorIdEqualTo(String value) {
            addCriterion("investor_id =", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdNotEqualTo(String value) {
            addCriterion("investor_id <>", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdGreaterThan(String value) {
            addCriterion("investor_id >", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdGreaterThanOrEqualTo(String value) {
            addCriterion("investor_id >=", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdLessThan(String value) {
            addCriterion("investor_id <", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdLessThanOrEqualTo(String value) {
            addCriterion("investor_id <=", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdLike(String value) {
            addCriterion("investor_id like", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdNotLike(String value) {
            addCriterion("investor_id not like", value, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdIn(List<String> values) {
            addCriterion("investor_id in", values, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdNotIn(List<String> values) {
            addCriterion("investor_id not in", values, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdBetween(String value1, String value2) {
            addCriterion("investor_id between", value1, value2, "investorId");
            return (Criteria) this;
        }

        public Criteria andInvestorIdNotBetween(String value1, String value2) {
            addCriterion("investor_id not between", value1, value2, "investorId");
            return (Criteria) this;
        }

        public Criteria andOrderStatusIsNull() {
            addCriterion("order_status is null");
            return (Criteria) this;
        }

        public Criteria andOrderStatusIsNotNull() {
            addCriterion("order_status is not null");
            return (Criteria) this;
        }

        public Criteria andOrderStatusEqualTo(Integer value) {
            addCriterion("order_status =", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotEqualTo(Integer value) {
            addCriterion("order_status <>", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusGreaterThan(Integer value) {
            addCriterion("order_status >", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_status >=", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusLessThan(Integer value) {
            addCriterion("order_status <", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusLessThanOrEqualTo(Integer value) {
            addCriterion("order_status <=", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusIn(List<Integer> values) {
            addCriterion("order_status in", values, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotIn(List<Integer> values) {
            addCriterion("order_status not in", values, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusBetween(Integer value1, Integer value2) {
            addCriterion("order_status between", value1, value2, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("order_status not between", value1, value2, "orderStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invest_orders
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable{

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invest_orders
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable{
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}