package com.pursebao.commons.pojo.po;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ContentCategoryExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table content_category
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table content_category
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table content_category
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public ContentCategoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table content_category
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable{
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCaidIsNull() {
            addCriterion("caid is null");
            return (Criteria) this;
        }

        public Criteria andCaidIsNotNull() {
            addCriterion("caid is not null");
            return (Criteria) this;
        }

        public Criteria andCaidEqualTo(String value) {
            addCriterion("caid =", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidNotEqualTo(String value) {
            addCriterion("caid <>", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidGreaterThan(String value) {
            addCriterion("caid >", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidGreaterThanOrEqualTo(String value) {
            addCriterion("caid >=", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidLessThan(String value) {
            addCriterion("caid <", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidLessThanOrEqualTo(String value) {
            addCriterion("caid <=", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidLike(String value) {
            addCriterion("caid like", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidNotLike(String value) {
            addCriterion("caid not like", value, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidIn(List<String> values) {
            addCriterion("caid in", values, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidNotIn(List<String> values) {
            addCriterion("caid not in", values, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidBetween(String value1, String value2) {
            addCriterion("caid between", value1, value2, "caid");
            return (Criteria) this;
        }

        public Criteria andCaidNotBetween(String value1, String value2) {
            addCriterion("caid not between", value1, value2, "caid");
            return (Criteria) this;
        }

        public Criteria andCateNameIsNull() {
            addCriterion("cate_name is null");
            return (Criteria) this;
        }

        public Criteria andCateNameIsNotNull() {
            addCriterion("cate_name is not null");
            return (Criteria) this;
        }

        public Criteria andCateNameEqualTo(String value) {
            addCriterion("cate_name =", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameNotEqualTo(String value) {
            addCriterion("cate_name <>", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameGreaterThan(String value) {
            addCriterion("cate_name >", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameGreaterThanOrEqualTo(String value) {
            addCriterion("cate_name >=", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameLessThan(String value) {
            addCriterion("cate_name <", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameLessThanOrEqualTo(String value) {
            addCriterion("cate_name <=", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameLike(String value) {
            addCriterion("cate_name like", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameNotLike(String value) {
            addCriterion("cate_name not like", value, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameIn(List<String> values) {
            addCriterion("cate_name in", values, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameNotIn(List<String> values) {
            addCriterion("cate_name not in", values, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameBetween(String value1, String value2) {
            addCriterion("cate_name between", value1, value2, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateNameNotBetween(String value1, String value2) {
            addCriterion("cate_name not between", value1, value2, "cateName");
            return (Criteria) this;
        }

        public Criteria andCateStatusIsNull() {
            addCriterion("cate_status is null");
            return (Criteria) this;
        }

        public Criteria andCateStatusIsNotNull() {
            addCriterion("cate_status is not null");
            return (Criteria) this;
        }

        public Criteria andCateStatusEqualTo(Integer value) {
            addCriterion("cate_status =", value, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusNotEqualTo(Integer value) {
            addCriterion("cate_status <>", value, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusGreaterThan(Integer value) {
            addCriterion("cate_status >", value, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("cate_status >=", value, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusLessThan(Integer value) {
            addCriterion("cate_status <", value, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusLessThanOrEqualTo(Integer value) {
            addCriterion("cate_status <=", value, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusIn(List<Integer> values) {
            addCriterion("cate_status in", values, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusNotIn(List<Integer> values) {
            addCriterion("cate_status not in", values, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusBetween(Integer value1, Integer value2) {
            addCriterion("cate_status between", value1, value2, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andCateStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("cate_status not between", value1, value2, "cateStatus");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("parent_id is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("parent_id is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(String value) {
            addCriterion("parent_id =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(String value) {
            addCriterion("parent_id <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(String value) {
            addCriterion("parent_id >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(String value) {
            addCriterion("parent_id >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(String value) {
            addCriterion("parent_id <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(String value) {
            addCriterion("parent_id <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLike(String value) {
            addCriterion("parent_id like", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotLike(String value) {
            addCriterion("parent_id not like", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<String> values) {
            addCriterion("parent_id in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<String> values) {
            addCriterion("parent_id not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(String value1, String value2) {
            addCriterion("parent_id between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(String value1, String value2) {
            addCriterion("parent_id not between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andIsParentIsNull() {
            addCriterion("is_parent is null");
            return (Criteria) this;
        }

        public Criteria andIsParentIsNotNull() {
            addCriterion("is_parent is not null");
            return (Criteria) this;
        }

        public Criteria andIsParentEqualTo(Integer value) {
            addCriterion("is_parent =", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentNotEqualTo(Integer value) {
            addCriterion("is_parent <>", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentGreaterThan(Integer value) {
            addCriterion("is_parent >", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_parent >=", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentLessThan(Integer value) {
            addCriterion("is_parent <", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentLessThanOrEqualTo(Integer value) {
            addCriterion("is_parent <=", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentIn(List<Integer> values) {
            addCriterion("is_parent in", values, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentNotIn(List<Integer> values) {
            addCriterion("is_parent not in", values, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentBetween(Integer value1, Integer value2) {
            addCriterion("is_parent between", value1, value2, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentNotBetween(Integer value1, Integer value2) {
            addCriterion("is_parent not between", value1, value2, "isParent");
            return (Criteria) this;
        }

        public Criteria andCateCreatedIsNull() {
            addCriterion("cate_created is null");
            return (Criteria) this;
        }

        public Criteria andCateCreatedIsNotNull() {
            addCriterion("cate_created is not null");
            return (Criteria) this;
        }

        public Criteria andCateCreatedEqualTo(Date value) {
            addCriterionForJDBCDate("cate_created =", value, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedNotEqualTo(Date value) {
            addCriterionForJDBCDate("cate_created <>", value, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedGreaterThan(Date value) {
            addCriterionForJDBCDate("cate_created >", value, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("cate_created >=", value, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedLessThan(Date value) {
            addCriterionForJDBCDate("cate_created <", value, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("cate_created <=", value, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedIn(List<Date> values) {
            addCriterionForJDBCDate("cate_created in", values, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedNotIn(List<Date> values) {
            addCriterionForJDBCDate("cate_created not in", values, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("cate_created between", value1, value2, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateCreatedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("cate_created not between", value1, value2, "cateCreated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedIsNull() {
            addCriterion("cate_updated is null");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedIsNotNull() {
            addCriterion("cate_updated is not null");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedEqualTo(Date value) {
            addCriterionForJDBCDate("cate_updated =", value, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedNotEqualTo(Date value) {
            addCriterionForJDBCDate("cate_updated <>", value, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedGreaterThan(Date value) {
            addCriterionForJDBCDate("cate_updated >", value, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("cate_updated >=", value, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedLessThan(Date value) {
            addCriterionForJDBCDate("cate_updated <", value, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("cate_updated <=", value, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedIn(List<Date> values) {
            addCriterionForJDBCDate("cate_updated in", values, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedNotIn(List<Date> values) {
            addCriterionForJDBCDate("cate_updated not in", values, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("cate_updated between", value1, value2, "cateUpdated");
            return (Criteria) this;
        }

        public Criteria andCateUpdatedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("cate_updated not between", value1, value2, "cateUpdated");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table content_category
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable{

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table content_category
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable{
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}