package com.pursebao.commons.pojo.po;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ProductsExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table products
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table products
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table products
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public ProductsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table products
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table products
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPidIsNull() {
            addCriterion("pid is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("pid is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(String value) {
            addCriterion("pid =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(String value) {
            addCriterion("pid <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(String value) {
            addCriterion("pid >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(String value) {
            addCriterion("pid >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(String value) {
            addCriterion("pid <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(String value) {
            addCriterion("pid <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLike(String value) {
            addCriterion("pid like", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotLike(String value) {
            addCriterion("pid not like", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<String> values) {
            addCriterion("pid in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<String> values) {
            addCriterion("pid not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(String value1, String value2) {
            addCriterion("pid between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(String value1, String value2) {
            addCriterion("pid not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andExpectedRateIsNull() {
            addCriterion("expected_rate is null");
            return (Criteria) this;
        }

        public Criteria andExpectedRateIsNotNull() {
            addCriterion("expected_rate is not null");
            return (Criteria) this;
        }

        public Criteria andExpectedRateEqualTo(Double value) {
            addCriterion("expected_rate =", value, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateNotEqualTo(Double value) {
            addCriterion("expected_rate <>", value, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateGreaterThan(Double value) {
            addCriterion("expected_rate >", value, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateGreaterThanOrEqualTo(Double value) {
            addCriterion("expected_rate >=", value, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateLessThan(Double value) {
            addCriterion("expected_rate <", value, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateLessThanOrEqualTo(Double value) {
            addCriterion("expected_rate <=", value, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateIn(List<Double> values) {
            addCriterion("expected_rate in", values, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateNotIn(List<Double> values) {
            addCriterion("expected_rate not in", values, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateBetween(Double value1, Double value2) {
            addCriterion("expected_rate between", value1, value2, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andExpectedRateNotBetween(Double value1, Double value2) {
            addCriterion("expected_rate not between", value1, value2, "expectedRate");
            return (Criteria) this;
        }

        public Criteria andStartMoneyIsNull() {
            addCriterion("start_money is null");
            return (Criteria) this;
        }

        public Criteria andStartMoneyIsNotNull() {
            addCriterion("start_money is not null");
            return (Criteria) this;
        }

        public Criteria andStartMoneyEqualTo(Double value) {
            addCriterion("start_money =", value, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyNotEqualTo(Double value) {
            addCriterion("start_money <>", value, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyGreaterThan(Double value) {
            addCriterion("start_money >", value, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("start_money >=", value, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyLessThan(Double value) {
            addCriterion("start_money <", value, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyLessThanOrEqualTo(Double value) {
            addCriterion("start_money <=", value, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyIn(List<Double> values) {
            addCriterion("start_money in", values, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyNotIn(List<Double> values) {
            addCriterion("start_money not in", values, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyBetween(Double value1, Double value2) {
            addCriterion("start_money between", value1, value2, "startMoney");
            return (Criteria) this;
        }

        public Criteria andStartMoneyNotBetween(Double value1, Double value2) {
            addCriterion("start_money not between", value1, value2, "startMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyIsNull() {
            addCriterion("surplus_money is null");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyIsNotNull() {
            addCriterion("surplus_money is not null");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyEqualTo(Double value) {
            addCriterion("surplus_money =", value, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyNotEqualTo(Double value) {
            addCriterion("surplus_money <>", value, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyGreaterThan(Double value) {
            addCriterion("surplus_money >", value, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("surplus_money >=", value, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyLessThan(Double value) {
            addCriterion("surplus_money <", value, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyLessThanOrEqualTo(Double value) {
            addCriterion("surplus_money <=", value, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyIn(List<Double> values) {
            addCriterion("surplus_money in", values, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyNotIn(List<Double> values) {
            addCriterion("surplus_money not in", values, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyBetween(Double value1, Double value2) {
            addCriterion("surplus_money between", value1, value2, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andSurplusMoneyNotBetween(Double value1, Double value2) {
            addCriterion("surplus_money not between", value1, value2, "surplusMoney");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateIsNull() {
            addCriterion("repayment_date is null");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateIsNotNull() {
            addCriterion("repayment_date is not null");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateEqualTo(Date value) {
            addCriterionForJDBCDate("repayment_date =", value, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("repayment_date <>", value, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateGreaterThan(Date value) {
            addCriterionForJDBCDate("repayment_date >", value, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("repayment_date >=", value, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateLessThan(Date value) {
            addCriterionForJDBCDate("repayment_date <", value, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("repayment_date <=", value, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateIn(List<Date> values) {
            addCriterionForJDBCDate("repayment_date in", values, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("repayment_date not in", values, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("repayment_date between", value1, value2, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("repayment_date not between", value1, value2, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andLoanLidIsNull() {
            addCriterion("loan_lid is null");
            return (Criteria) this;
        }

        public Criteria andLoanLidIsNotNull() {
            addCriterion("loan_lid is not null");
            return (Criteria) this;
        }

        public Criteria andLoanLidEqualTo(String value) {
            addCriterion("loan_lid =", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidNotEqualTo(String value) {
            addCriterion("loan_lid <>", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidGreaterThan(String value) {
            addCriterion("loan_lid >", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidGreaterThanOrEqualTo(String value) {
            addCriterion("loan_lid >=", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidLessThan(String value) {
            addCriterion("loan_lid <", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidLessThanOrEqualTo(String value) {
            addCriterion("loan_lid <=", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidLike(String value) {
            addCriterion("loan_lid like", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidNotLike(String value) {
            addCriterion("loan_lid not like", value, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidIn(List<String> values) {
            addCriterion("loan_lid in", values, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidNotIn(List<String> values) {
            addCriterion("loan_lid not in", values, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidBetween(String value1, String value2) {
            addCriterion("loan_lid between", value1, value2, "loanLid");
            return (Criteria) this;
        }

        public Criteria andLoanLidNotBetween(String value1, String value2) {
            addCriterion("loan_lid not between", value1, value2, "loanLid");
            return (Criteria) this;
        }

        public Criteria andProductOnlineIsNull() {
            addCriterion("product_online is null");
            return (Criteria) this;
        }

        public Criteria andProductOnlineIsNotNull() {
            addCriterion("product_online is not null");
            return (Criteria) this;
        }

        public Criteria andProductOnlineEqualTo(Integer value) {
            addCriterion("product_online =", value, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineNotEqualTo(Integer value) {
            addCriterion("product_online <>", value, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineGreaterThan(Integer value) {
            addCriterion("product_online >", value, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineGreaterThanOrEqualTo(Integer value) {
            addCriterion("product_online >=", value, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineLessThan(Integer value) {
            addCriterion("product_online <", value, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineLessThanOrEqualTo(Integer value) {
            addCriterion("product_online <=", value, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineIn(List<Integer> values) {
            addCriterion("product_online in", values, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineNotIn(List<Integer> values) {
            addCriterion("product_online not in", values, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineBetween(Integer value1, Integer value2) {
            addCriterion("product_online between", value1, value2, "productOnline");
            return (Criteria) this;
        }

        public Criteria andProductOnlineNotBetween(Integer value1, Integer value2) {
            addCriterion("product_online not between", value1, value2, "productOnline");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table products
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table products
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}