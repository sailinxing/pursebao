package com.pursebao.commons.pojo.po;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class InvestExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invest
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invest
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invest
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public InvestExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invest
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invest
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable{
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andInvestIdIsNull() {
            addCriterion("invest_id is null");
            return (Criteria) this;
        }

        public Criteria andInvestIdIsNotNull() {
            addCriterion("invest_id is not null");
            return (Criteria) this;
        }

        public Criteria andInvestIdEqualTo(String value) {
            addCriterion("invest_id =", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdNotEqualTo(String value) {
            addCriterion("invest_id <>", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdGreaterThan(String value) {
            addCriterion("invest_id >", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdGreaterThanOrEqualTo(String value) {
            addCriterion("invest_id >=", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdLessThan(String value) {
            addCriterion("invest_id <", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdLessThanOrEqualTo(String value) {
            addCriterion("invest_id <=", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdLike(String value) {
            addCriterion("invest_id like", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdNotLike(String value) {
            addCriterion("invest_id not like", value, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdIn(List<String> values) {
            addCriterion("invest_id in", values, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdNotIn(List<String> values) {
            addCriterion("invest_id not in", values, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdBetween(String value1, String value2) {
            addCriterion("invest_id between", value1, value2, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestIdNotBetween(String value1, String value2) {
            addCriterion("invest_id not between", value1, value2, "investId");
            return (Criteria) this;
        }

        public Criteria andInvestOidIsNull() {
            addCriterion("invest_oid is null");
            return (Criteria) this;
        }

        public Criteria andInvestOidIsNotNull() {
            addCriterion("invest_oid is not null");
            return (Criteria) this;
        }

        public Criteria andInvestOidEqualTo(String value) {
            addCriterion("invest_oid =", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidNotEqualTo(String value) {
            addCriterion("invest_oid <>", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidGreaterThan(String value) {
            addCriterion("invest_oid >", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidGreaterThanOrEqualTo(String value) {
            addCriterion("invest_oid >=", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidLessThan(String value) {
            addCriterion("invest_oid <", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidLessThanOrEqualTo(String value) {
            addCriterion("invest_oid <=", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidLike(String value) {
            addCriterion("invest_oid like", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidNotLike(String value) {
            addCriterion("invest_oid not like", value, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidIn(List<String> values) {
            addCriterion("invest_oid in", values, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidNotIn(List<String> values) {
            addCriterion("invest_oid not in", values, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidBetween(String value1, String value2) {
            addCriterion("invest_oid between", value1, value2, "investOid");
            return (Criteria) this;
        }

        public Criteria andInvestOidNotBetween(String value1, String value2) {
            addCriterion("invest_oid not between", value1, value2, "investOid");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseIsNull() {
            addCriterion("daily_increase is null");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseIsNotNull() {
            addCriterion("daily_increase is not null");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseEqualTo(Double value) {
            addCriterion("daily_increase =", value, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseNotEqualTo(Double value) {
            addCriterion("daily_increase <>", value, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseGreaterThan(Double value) {
            addCriterion("daily_increase >", value, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseGreaterThanOrEqualTo(Double value) {
            addCriterion("daily_increase >=", value, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseLessThan(Double value) {
            addCriterion("daily_increase <", value, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseLessThanOrEqualTo(Double value) {
            addCriterion("daily_increase <=", value, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseIn(List<Double> values) {
            addCriterion("daily_increase in", values, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseNotIn(List<Double> values) {
            addCriterion("daily_increase not in", values, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseBetween(Double value1, Double value2) {
            addCriterion("daily_increase between", value1, value2, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andDailyIncreaseNotBetween(Double value1, Double value2) {
            addCriterion("daily_increase not between", value1, value2, "dailyIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseIsNull() {
            addCriterion("current_increase is null");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseIsNotNull() {
            addCriterion("current_increase is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseEqualTo(Double value) {
            addCriterion("current_increase =", value, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseNotEqualTo(Double value) {
            addCriterion("current_increase <>", value, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseGreaterThan(Double value) {
            addCriterion("current_increase >", value, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseGreaterThanOrEqualTo(Double value) {
            addCriterion("current_increase >=", value, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseLessThan(Double value) {
            addCriterion("current_increase <", value, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseLessThanOrEqualTo(Double value) {
            addCriterion("current_increase <=", value, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseIn(List<Double> values) {
            addCriterion("current_increase in", values, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseNotIn(List<Double> values) {
            addCriterion("current_increase not in", values, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseBetween(Double value1, Double value2) {
            addCriterion("current_increase between", value1, value2, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andCurrentIncreaseNotBetween(Double value1, Double value2) {
            addCriterion("current_increase not between", value1, value2, "currentIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseIsNull() {
            addCriterion("expected_increase is null");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseIsNotNull() {
            addCriterion("expected_increase is not null");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseEqualTo(Double value) {
            addCriterion("expected_increase =", value, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseNotEqualTo(Double value) {
            addCriterion("expected_increase <>", value, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseGreaterThan(Double value) {
            addCriterion("expected_increase >", value, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseGreaterThanOrEqualTo(Double value) {
            addCriterion("expected_increase >=", value, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseLessThan(Double value) {
            addCriterion("expected_increase <", value, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseLessThanOrEqualTo(Double value) {
            addCriterion("expected_increase <=", value, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseIn(List<Double> values) {
            addCriterion("expected_increase in", values, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseNotIn(List<Double> values) {
            addCriterion("expected_increase not in", values, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseBetween(Double value1, Double value2) {
            addCriterion("expected_increase between", value1, value2, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andExpectedIncreaseNotBetween(Double value1, Double value2) {
            addCriterion("expected_increase not between", value1, value2, "expectedIncrease");
            return (Criteria) this;
        }

        public Criteria andInvestStatusIsNull() {
            addCriterion("invest_status is null");
            return (Criteria) this;
        }

        public Criteria andInvestStatusIsNotNull() {
            addCriterion("invest_status is not null");
            return (Criteria) this;
        }

        public Criteria andInvestStatusEqualTo(Integer value) {
            addCriterion("invest_status =", value, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusNotEqualTo(Integer value) {
            addCriterion("invest_status <>", value, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusGreaterThan(Integer value) {
            addCriterion("invest_status >", value, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("invest_status >=", value, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusLessThan(Integer value) {
            addCriterion("invest_status <", value, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusLessThanOrEqualTo(Integer value) {
            addCriterion("invest_status <=", value, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusIn(List<Integer> values) {
            addCriterion("invest_status in", values, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusNotIn(List<Integer> values) {
            addCriterion("invest_status not in", values, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusBetween(Integer value1, Integer value2) {
            addCriterion("invest_status between", value1, value2, "investStatus");
            return (Criteria) this;
        }

        public Criteria andInvestStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("invest_status not between", value1, value2, "investStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invest
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable{

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invest
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable{
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}